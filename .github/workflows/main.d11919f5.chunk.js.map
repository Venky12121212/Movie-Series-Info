{"version":3,"sources":["APIKey.js","Components/Layout/loader.gif","Components/Layout/Navbar.js","Actions/SearchActions.js","Actions/types.js","Components/Home/SearchForm.js","Components/Layout/Spinner.js","Components/Home/MovieCard.js","Components/Home/MoviesContainer.js","Components/Home/Landing.js","Components/Layout/Footer.js","Components/Home/Movie.js","Reducers/searchReducers.js","Reducers/index.js","Store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","id","setLoading","type","SearchForm","onChange","e","props","searchMovie","target","value","onSubmit","preventDefault","fetchMovies","text","this","name","placeholder","style","margin","Component","connect","state","movies","dispatch","payload","axios","get","APIKey","then","response","data","catch","err","console","log","Spinner","src","loader","width","display","alt","MovieCard","movie","Poster","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Landing","loading","Footer","href","rel","Movie","fetchMovie","match","params","movieInfo","Fragment","Genre","Released","Rated","Director","Writer","Actors","imdbRating","Plot","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d11919f5.chunk.js","sourcesContent":["module.exports = {\r\n    'APIKey': 'c5cfe6ad'\r\n}","module.exports = __webpack_public_path__ + \"static/media/loader.0836a709.gif\";","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-light bg-dark mb-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"navbar-header\">\r\n                        <Link className=\"navbar-brand text-white text-lg brand-text\" to=\"#\">\r\n                            MovieSeriesInfo</Link>\r\n                    </div>\r\n                    <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n                        </li>\r\n                        <li className=\"nav-item d-inline-block mr-4\">\r\n                            <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { APIKey } from '../APIKey';\r\n\r\nexport const searchMovie = text => dispatch => {\r\n    dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload: text\r\n    })\r\n}\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n    debugger;\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n        .then(response => dispatch({\r\n            type: FETCH_MOVIES,\r\n            payload: response.data\r\n        }))\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n        .then(response => dispatch({\r\n            type: FETCH_MOVIE,\r\n            payload: response.data\r\n        }))\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: LOADING\r\n    }\r\n}\r\n\r\n","export const SEARCH_MOVIE = \"SEARCH_MOVIE\"\r\n\r\nexport const FETCH_MOVIES = \"FETCH_MOVIES\"\r\n\r\nexport const FETCH_MOVIE = \"FETCH_MOVIE\"\r\n\r\nexport const LOADING = \"LOADING\"\r\n","import React, { Component } from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport { searchMovie, fetchMovies, setLoading} from '../../Actions/SearchActions';\r\n\r\n\r\n\r\nexport class SearchForm extends Component {\r\n    onChange = e => {\r\n        this.props.searchMovie(e.target.value);\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.fetchMovies(this.props.text);\r\n        this.props.setLoading();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron jubotron-fluid mt-5 text-center\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-4 mb-3\">\r\n                        <i className=\"fa fa-search\"> Search for a movie , TV Series.....</i>\r\n                    </h1>\r\n                    <form id=\"searchForm\" onSubmit={this.onSubmit} >\r\n                        <input type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"search-text\"\r\n                            placeholder=\"Search Movies, TV Series...\"\r\n                            onChange = {this.onChange} style={{margin: \"5px\"}}/>\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-bg-mt-3\">\r\n                            Search\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = state => ({\r\ntext: state.movies.text\r\n})\r\n\r\nexport default connect(mapStateToProps, \r\n    { searchMovie, fetchMovies, setLoading })\r\n    (SearchForm);\r\n","import React from 'react';\r\nimport loader from './loader.gif';\r\n\r\nfunction Spinner(){\r\n    return(\r\n        <div>\r\n            <img \r\n             src={loader}\r\n             style={{width: '200px', margin: 'auto', display: 'block'}}\r\n             alt= 'Loading...'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n    render() {\r\n        debugger\r\n        const {movie} = this.props;\r\n        return (\r\n                <div className=\"col-md-3 mb-5\">\r\n                    <div className=\"card card-body bg-dark text-center h-100\">\r\n                        <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"Movie Cover\"/>\r\n                        <h5 className=\"text-light card-title\">\r\n                            {movie.Title} - {movie.Year}\r\n                        </h5>\r\n                        <Link className=\"btn btn-primary\" to={'./movie/'+ movie.imdbID}>\r\n                            Movie Details\r\n                            <i className=\"fas fa-chevron-right\"/>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard\r\n","import React, { Component } from 'react';\r\n\r\nimport {connect } from 'react-redux';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nexport class MoviesContainer extends Component {\r\n    render() {\r\n        const {movies} = this.props;\r\n\r\n        var content =\"\";\r\n        //content = movies.length > 0 ? movies.map((movie, index) => <MovieCard key={index} movie={movie}/>) : null; \r\n        content = movies.Response === \"True\" ? movies.Search.map((movie, index) => \r\n        (<MovieCard key={index} movie={movie}/>))\r\n        : null; \r\n\r\n        return (\r\n            <div className=\"row\">\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.movies.movies\r\n})\r\nexport default connect(mapStateToProps)(MoviesContainer)\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchForm from './SearchForm';\r\nimport Spinner from '../Layout/Spinner';\r\nimport MoviesContainer from './MoviesContainer';\r\n\r\nexport class Landing extends Component {\r\n    render() {\r\n        const {loading} = this.props;\r\n        return (\r\n            <div className=\"container\">\r\n                < SearchForm />\r\n                {loading ? <Spinner /> : <MoviesContainer />}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div id=\"footerComponent\">\r\n\r\n            <div className=\"col-md-12\">\r\n                <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\r\n                    Developed By:\r\n                        <span className=\"text-warning font-weight-normal\">\r\n                        Web Developer\r\n                        </span>\r\n                    , Using <i className=\"fab fa-react\" />React JS &amp; Redux JS integrated with external movies data API\r\n                        <a href=\"http://www.omdbapi.com\"\r\n                           target=\"_blank\"\r\n                           rel=\"noopener noreferrer\">\r\n                        OMDBI\r\n                        </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport Spinner from '../Layout/Spinner'\r\n\r\nimport { fetchMovie, setLoading } from '../../Actions/SearchActions';\r\n\r\nexport class Movie extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchMovie(this.props.match.params.id)\r\n        this.props.setLoading();\r\n    }\r\n    render() {\r\n        debugger\r\n        const { loading, movie } = this.props;\r\n\r\n        //  var rating1 = movie.Ratings.Source[0];\r\n       \r\n        let movieInfo = (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 card crad-body\">\r\n                        <img className=\"thumbnail\" src={movie.Poster} alt=\"Poster\" />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <h2 className=\"mb-4\">{movie.Title}</h2>\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Genre:</strong>{movie.Genre}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Released:</strong>{movie.Released}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Rated:</strong>{movie.Rated}\r\n                            </li>\r\n\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Director:</strong>{movie.Director}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Writer:</strong>{movie.Writer}\r\n                            </li>\r\n                            <li className=\"list-group-item\">\r\n                                <strong>Actors:</strong>{movie.Actors}\r\n                            </li>\r\n                        </ul>\r\n                        <ul className=\"list-group-item ratingsSection\">\r\n\r\n                            <li className=\"list-group-item\">\r\n                                <strong>IMDB Rating:</strong>{movie.imdbRating}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"card card-body bg-dark my-5 text-light\">\r\n                        <div className=\"col-md-12\">\r\n                            <h3>About</h3>\r\n                            {movie.Plot}\r\n                            <hr />\r\n                            <a href={`https://www.imdb.com/title/` + movie.imdbID}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className=\"btn btn-primary\"\r\n                            >\r\n                                View on IMDB\r\n                            </a>\r\n                            <Link to=\"/\" className=\"btn btn-default text-light\">Go back to search</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>);\r\n\r\n        let content = loading ? <Spinner /> : movieInfo;\r\n\r\n        return (\r\n            <div>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    loading: state.movies.loading,\r\n    movie: state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from '../Actions/types';\r\n\r\n\r\nconst initialState = {\r\n    text: \"\",\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                text: action.payload,\r\n                loading: false\r\n            }\r\n        case FETCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n                loading: false\r\n            }\r\n        case FETCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: action.payload,\r\n                loading: false\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\nimport searchReducers from './searchReducers';\r\n\r\nexport default combineReducers({\r\n    movies : searchReducers\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from './Reducers'\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools\r\n    (applyMiddleware(...middleware)));\r\n\r\nexport default store","import React, { Component } from 'react';\n\nimport { Provider } from 'react-redux';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Navbar from './Components/Layout/Navbar';\nimport Landing from './Components/Home/Landing';\nimport Footer from './Components/Layout/Footer';\nimport Movie from './Components/Home/Movie';\n\nimport store from './Store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n          <Navbar />\n         <Route exact path=\"/\" component={Landing}/>\n         <Route exact path=\"/movie/:id\" component={Movie}/>\n          <Footer />\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}